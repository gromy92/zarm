(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{310:function(n,e,o){"use strict";o.r(e);var c=o(6),t=o.n(c),r=o(5),l=o.n(r),a=o(2),b=o.n(a),C=o(4),u=o.n(C),h=function(n){function e(){var n,c,r,a;l()(this,e);for(var C=arguments.length,u=Array(C),h=0;h<C;h++)u[h]=arguments[h];return c=r=b()(this,(n=e.__proto__||t()(e)).call.apply(n,[this].concat(u))),r.document=function(){return{document:o(496),className:"checkbox-page"}},a=c,b()(r,a)}return u()(e,n),e}(o(465).a);e.default=h},461:function(n,e,o){},465:function(n,e,o){"use strict";var c=o(6),t=o.n(c),r=o(5),l=o.n(r),a=o(7),b=o.n(a),C=o(2),u=o.n(C),h=o(4),x=o.n(h),k=o(0),d=o.n(k),s=o(462),i=o.n(s),p=o(464),m=o.n(p),v=(o(463),o(461),function(n){function e(){return l()(this,e),u()(this,(e.__proto__||t()(e)).apply(this,arguments))}return x()(e,n),b()(e,[{key:"render",value:function(){var n=this.document(localStorage.getItem("LANGUAGE")||"zh-CN"),e=n.document,o=n.className;if("string"==typeof e){var c=new i.a.Renderer;c.table=function(n,e){return'<div class="grid-container"><table class="grid"><thead>'+n+"</thead><tbody>"+e+"</tbody></table></div>"},c.code=function(n,e){return'<pre><code class="hljs '+e+'">'+(!(!e||!m.a.getLanguage(e))?m.a.highlight(e,n).value:n)+"</code></pre>"};var t=i()(e,{renderer:c});return d.a.createElement("div",{className:o,dangerouslySetInnerHTML:{__html:t}})}return d.a.createElement("span",null)}}]),e}(k.Component));e.a=v},496:function(n,e){n.exports='# 复选框 Checkbox\n\n\n\n## 基本用法\n```jsx\nimport { Cell, Checkbox } from \'zarm\';\n\nclass Demo extends React.Component {\n  render() {\n    return (\n      <div>\n        <Cell><Checkbox>普通</Checkbox></Cell>\n        <Cell><Checkbox defaultChecked>默认选中</Checkbox></Cell>\n        <Cell><Checkbox disabled>禁用</Checkbox></Cell>\n        <Cell><Checkbox defaultChecked disabled>选中且禁用</Checkbox></Cell>\n        <Cell className="agreement-box">\n          <Checkbox id="agreement" />\n          <label htmlFor="agreement">阅读并同意<a href="/#" onClick={(e) => { e.preventDefault(); alert(\'agree it\'); }}>《XXX条款》</a>中的相关规定</label>\n        </Cell>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n## 按钮样式\n```jsx\nimport { Cell, Checkbox } from \'zarm\';\n\nclass Demo extends React.Component {\n  render() {\n    return (\n      <div>\n        <Cell\n          description={\n            <Checkbox.Group type="button">\n              <Checkbox value="0">选项一</Checkbox>\n              <Checkbox value="1">选项二</Checkbox>\n              <Checkbox value="2">选项三</Checkbox>\n            </Checkbox.Group>\n          }\n        >\n          普通\n        </Cell>\n\n        <Cell\n          description={\n            <Checkbox.Group type="button" defaultValue={[\'0\', \'1\']}>\n              <Checkbox value="0">选项一</Checkbox>\n              <Checkbox value="1">选项二</Checkbox>\n              <Checkbox value="2">选项三</Checkbox>\n            </Checkbox.Group>\n          }\n        >\n          指定默认值\n        </Cell>\n\n        <Cell\n          description={\n            <Checkbox.Group type="button">\n              <Checkbox value="0">选项一</Checkbox>\n              <Checkbox value="1">选项二</Checkbox>\n              <Checkbox value="2" disabled>选项三</Checkbox>\n            </Checkbox.Group>\n          }\n        >\n          禁用指定项\n        </Cell>\n\n        <Cell\n          description={\n            <Checkbox.Group type="button" shape="rect">\n              <Checkbox value="0">选项一</Checkbox>\n              <Checkbox value="1">选项二</Checkbox>\n              <Checkbox value="2">选项三</Checkbox>\n            </Checkbox.Group>\n          }\n        >\n          直角\n        </Cell>\n\n        <Cell\n          description={\n            <Checkbox.Group type="button" shape="round">\n              <Checkbox value="0">选项一</Checkbox>\n              <Checkbox value="1">选项二</Checkbox>\n              <Checkbox value="2">选项三</Checkbox>\n            </Checkbox.Group>\n          }\n        >\n          椭圆角\n        </Cell>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n## 块级样式\n```jsx\nimport { Checkbox } from \'zarm\';\n\nclass Demo extends React.Component {\n  render() {\n    return (\n      <div className="block-box">\n        <Checkbox.Group block type="button">\n          <Checkbox value="0">选项一</Checkbox>\n          <Checkbox value="1">选项二</Checkbox>\n          <Checkbox value="2">选项三</Checkbox>\n        </Checkbox.Group>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n## 列表样式\n```jsx\nimport { Checkbox } from \'zarm\';\n\nclass Demo extends React.Component {\n  render() {\n    return (\n      <div>\n        <Checkbox.Group type="cell">\n          <Checkbox value="0">选项一</Checkbox>\n          <Checkbox value="1">选项二</Checkbox>\n          <Checkbox value="2" disabled>选项三（禁止选择）</Checkbox>\n        </Checkbox.Group>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n## 列表样式禁用状态\n```jsx\nimport { Checkbox } from \'zarm\';\n\nclass Demo extends React.Component {\n  render() {\n    return (\n      <div>\n        <Checkbox.Group disabled type="cell">\n          <Checkbox value="0">选项一</Checkbox>\n          <Checkbox value="1">选项二</Checkbox>\n          <Checkbox value="2">选项三</Checkbox>\n        </Checkbox.Group>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n## API\n\n### Checkbox\n| 属性 | 类型 | 默认值 | 说明 |\n| :--- | :--- | :--- | :--- |\n| type | string | - | 显示类型，可选值 `button`, `cell` |\n| value | string &#124; number | - | 值 |\n| checked | boolean | - | 当前是否选中 |\n| shape | string | \'radius\' | 形状，可选值 `rect`, `radius`, `round` | \n| defaultChecked | boolean | - | 初始是否选中 |\n| disabled | boolean | false | 是否禁用 |\n| onChange | (checked?: boolean) => void | - | 值变化时触发的回调函数 |\n| id | string | - | 方便外部带有for属性的label标签控制当前checkbox |\n\n### Checkbox.Group\n| 属性 | 类型 | 默认值 | 说明 |\n| :--- | :--- | :--- | :--- |\n| type | string | - | 显示类型，可选值 `button`, `cell` |\n| value | number[] \\| string[] | [] | 选中值 |\n| defaultValue | number[] \\| string[] | [] | 初始选中值 |\n| shape | string | \'radius\' | 形状，可选值 `rect`, `radius`, `round` | \n| block | boolean | false | 是否为块级元素 |\n| disabled | boolean | false | 是否禁用 |\n| onChange | (value?: number[] \\| string[]) => void | - | 值变化时触发的回调函数 |\n'}}]);