(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{285:function(n,e,t){"use strict";t.r(e);var a=t(6),l=t.n(a),s=t(5),i=t.n(s),o=t(2),d=t.n(o),c=t(4),r=t.n(c),m=function(n){function e(){var n,a,s,o;i()(this,e);for(var c=arguments.length,r=Array(c),m=0;m<c;m++)r[m]=arguments[m];return a=s=d()(this,(n=e.__proto__||l()(e)).call.apply(n,[this].concat(r))),s.document=function(){return{document:t(471),className:"tabs-page"}},o=a,d()(s,o)}return r()(e,n),e}(t(465).a);e.default=m},461:function(n,e,t){},465:function(n,e,t){"use strict";var a=t(6),l=t.n(a),s=t(5),i=t.n(s),o=t(7),d=t.n(o),c=t(2),r=t.n(c),m=t(4),v=t.n(m),P=t(0),u=t.n(P),b=t(462),N=t.n(b),p=t(464),T=t.n(p),f=(t(463),t(461),function(n){function e(){return i()(this,e),r()(this,(e.__proto__||l()(e)).apply(this,arguments))}return v()(e,n),d()(e,[{key:"render",value:function(){var n=this.document(localStorage.getItem("LANGUAGE")||"zh-CN"),e=n.document,t=n.className;if("string"==typeof e){var a=new N.a.Renderer;a.table=function(n,e){return'<div class="grid-container"><table class="grid"><thead>'+n+"</thead><tbody>"+e+"</tbody></table></div>"},a.code=function(n,e){return'<pre><code class="hljs '+e+'">'+(!(!e||!T.a.getLanguage(e))?T.a.highlight(e,n).value:n)+"</code></pre>"};var l=N()(e,{renderer:a});return u.a.createElement("div",{className:t,dangerouslySetInnerHTML:{__html:l}})}return u.a.createElement("span",null)}}]),e}(P.Component));e.a=f},471:function(n,e){n.exports='# 标签页 Tabs\n\n\n\n\n## 超出滑动\n```jsx\nimport { Tabs } from \'zarm\';\nconst  Panel = Tabs.Panel;\n\nclass Demo extends React.Component {\n  render() {\n    return (\n      <div>\n        <Tabs onChange={(i) => { console.log(i); }} \n        canSwipe\n        page={5}   //Tab分页尺寸\n        useTabPaged={true}   //是否使用分页\n        tabWidth={80}\n        defaultValue={2}\n        lineWidth={50}\n        scrollElastic={true}\n        >\n          <Panel title="选项卡1">\n            <div className="content">选项卡1内容</div>\n          </Panel>\n          <Panel title="选项卡2">\n            <div className="content">选项卡2内容</div>\n          </Panel>\n          <Panel title="选项卡3">\n            <div className="content">选项卡3内容</div>\n          </Panel>\n          <Panel title="选项卡4" disabled>\n            <div className="content">选项卡4内容</div>\n          </Panel>\n          <Panel title="选项卡5">\n            <div className="content">选项卡5内容</div>\n          </Panel>\n          <Panel title="选项卡6">\n            <div className="content">选项卡6内容</div>\n          </Panel>\n          <Panel title="选项卡7">\n            <div className="content">选项卡7内容</div>\n          </Panel>\n          <Panel title="选项卡8">\n            <div className="content">选项卡8内容</div>\n          </Panel>\n          <Panel title="选项卡9">\n            <div className="content">选项卡9内容</div>\n          </Panel>\n          <Panel title="选项卡10">\n            <div className="content">选项卡10内容</div>\n          </Panel>\n          <Panel title="选项卡11">\n            <div className="content">选项卡11内容</div>\n          </Panel>\n          <Panel title="选项卡12">\n            <div className="content">选项卡12内容</div>\n          </Panel>\n        </Tabs>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n## selected 默认选项卡\n```jsx\nimport { Tabs } from \'zarm\';\nconst { Panel } = Tabs;\n\nclass Demo extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isSelected: false\n    };\n  }\n  render() {\n    const {isSelected} = this.state\n  if(!isSelected){\n    let timer = setTimeout(()=>{\n      this.setState({\n        isSelected:true\n      })\n    },2000);\n  }\n    return (\n      <div>\n        <Tabs onChange={(i) => { console.log(i); }} \n        page={5}   //Tab分页尺寸\n        canSwipe={false}\n        >\n          <Panel title="选项卡1">\n            <div className="content">选项卡1内容</div>\n          </Panel>\n          <Panel title="选项卡2" selected={isSelected}>\n            <div className="content">选项卡2内容{isSelected}</div>\n          </Panel>\n          <Panel title="选项卡3">\n            <div className="content">选项卡3内容</div>\n          </Panel>\n          <Panel title="选项卡4">\n            <div className="content">选项卡4内容</div>\n          </Panel>\n        </Tabs>\n      </div>\n    )\n  }\n}\n\n  ReactDOM.render(<Demo />, mountNode);\n```\n## 基本用法\n```jsx\n// import { Tabs } from \'zarm\';\n// const { Panel } = Tabs;\n\n// class Demo extends React.Component {\n//   render() {\n//     return (\n//       <div>\n//         <Tabs onChange={(i) => { console.log(i); }} \n//         page={5}   //Tab分页尺寸\n//         defaultValue={1}\n//         canSwipe\n//         >\n//           <Panel title="选项卡1">\n//             <div className="content">选项卡1内容</div>\n//           </Panel>\n//           <Panel title="选项卡2">\n//             <div className="content">选项卡2内容</div>\n//           </Panel>\n//           <Panel title="选项卡3">\n//             <div className="content">选项卡3内容</div>\n//           </Panel>\n//           <Panel title="选项卡4">\n//             <div className="content">选项卡4内容</div>\n//           </Panel>\n//         </Tabs>\n//       </div>\n//     )\n//   }\n// }\n\n//  ReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n## 可滑动\n```jsx\n// import { Tabs } from \'zarm\';\n// const { Panel } = Tabs;\n\n// class Demo extends React.Component {\n//   render() {\n//     return (\n//       <div>\n//         <Tabs canSwipe onChange={(i) => { console.log(i); }}>\n//           <Panel title="选项卡1">\n//             <div className="content">试试点我左滑</div>\n//           </Panel>\n//           <Panel title="选项卡2">\n//             <div className="content">试试点我右滑</div>\n//           </Panel>\n//         </Tabs>\n//       </div>\n//     )\n//   }\n// }\n\n// ReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n## 指定默认选项\n```jsx\n// import { Tabs } from \'zarm\';\n// const { Panel } = Tabs;\n\n// class Demo extends React.Component {\n//   render() {\n//     return (\n//       <div>\n//         <Tabs defaultValue={1}>\n//           <Panel title="选项卡1">\n//             <div className="content">选项卡1内容</div>\n//           </Panel>\n//           <Panel title="选项卡2">\n//             <div className="content">选项卡2内容</div>\n//           </Panel>\n//           <Panel title="选项卡3">\n//             <div className="content">选项卡3内容</div>\n//           </Panel>\n//         </Tabs>\n//       </div>\n//     )\n//   }\n// }\n\n// ReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n## 指定线条宽度\n```jsx\n// import { Tabs } from \'zarm\';\n// const { Panel } = Tabs;\n\n// class Demo extends React.Component {\n//   render() {\n//     return (\n//       <div>\n//         <Tabs lineWidth={60}>\n//           <Panel title="选项卡1">\n//             <div className="content">选项卡1内容</div>\n//           </Panel>\n//           <Panel title="选项卡2">\n//             <div className="content">选项卡2内容</div>\n//           </Panel>\n//           <Panel title="选项卡3">\n//             <div className="content">选项卡3内容</div>\n//           </Panel>\n//         </Tabs>\n//       </div>\n//     )\n//   }\n// }\n\n// ReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n## 禁用指定选项\n```jsx\n// import { Tabs } from \'zarm\';\n// const { Panel } = Tabs;\n\n// class Demo extends React.Component {\n//   render() {\n//     return (\n//       <div>\n//         <Tabs>\n//           <Panel title="选项卡1">\n//             <div className="content">选项卡1内容</div>\n//           </Panel>\n//           <Panel title="选项卡2" disabled>\n//             <div className="content">选项卡2内容</div>\n//           </Panel>\n//           <Panel title="选项卡3">\n//             <div className="content">选项卡3内容</div>\n//           </Panel>\n//         </Tabs>\n//       </div>\n//     )\n//   }\n// }\n\n// ReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n\x3c!-- ## API\n\n### Tabs\n| 属性 | 类型 | 默认值 | 说明 |\n| :--- | :--- | :--- | :--- |\n| value | string | - | 值 |\n| defaultValue | string | - | 初始值 |\n| disabled | boolean | false | 是否禁用 |\n| canSwipe | boolean | false | 是否支持滑动切换 |\n| lineWidth | number \\| string | - | 线条宽度 |\n| onChange | (index?: number) => void | - | 值变化时触发的回调函数 |\n\n\n### Panel\n| 属性 | 类型 | 默认值 | 说明 |\n| :--- | :--- | :--- | :--- |\n| disabled | boolean | false | 是否禁用 |\n| title | string | - | 标题 | --\x3e\n'}}]);